---
- name: Run MAIA Core Installation
  hosts: localhost
  vars:
    cluster_config: /path/to/cluster_config.yaml
    config_folder: /path/to/configs_folder
    ARGOCD_KUBECONFIG: /path/to/argocd_kubeconfig.yaml
    DEPLOY_KUBECONFIG: /path/to/argocd_kubeconfig.yaml
    MAIA_PRIVATE_REGISTRY: registry.maia-cloud.com
  tasks:
    - name: Read cluster config YAML file
      ansible.builtin.slurp:
        src: "{{ cluster_config }}"
      register: cluster_config_content

    - name: Extract cluster_name from cluster config
      set_fact:
        cluster_name: "{{ (cluster_config_content.content | b64decode | from_yaml).cluster_name }}"

    - name: Print cluster_name value
      debug:
        msg: "Cluster Name: {{ cluster_name }}"


    - name: Create namespaces
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: "{{ item }}"
      loop:
        - observability
        - traefik
        - metallb-system
        - cert-manager
        - gpu-operator
        - maia-core-toolkit
        - ingress-nginx
        - minio-operator
        - authentication
        - maia-webhooks
        - nfs-server-provisioner
      environment:
        KUBECONFIG: '{{ DEPLOY_KUBECONFIG }}'
    
    - name: RUN MAIA_install_core_toolkit
      command: >
        MAIA_install_core_toolkit
        --cluster-config {{ config_folder }}/{{ cluster_name }}.yaml
        --config-folder {{ config_folder }}
        --maia-config-file {{ config_folder }}/maia_config.yaml
      environment:
        DEPLOY_KUBECONFIG: '{{ DEPLOY_KUBECONFIG }}'
        KUBECONFIG: '{{ ARGOCD_KUBECONFIG }}'
        JSON_KEY_PATH: "{{ config_folder }}/maia_private.json"
        MAIA_PRIVATE_REGISTRY: "{{ MAIA_PRIVATE_REGISTRY }}"
      register: maia_install_output

    - name: Print line containing "-prometheus"
      debug:
        msg: "{{ maia_install_output.stdout | regex_search('.*-prometheus.*') }}"

    - name: Execute the line containing "-prometheus"
      command: "{{ maia_install_output.stdout | regex_search('.*-prometheus.*') }}"
      environment:
        KUBECONFIG: '{{ DEPLOY_KUBECONFIG }}'


    
